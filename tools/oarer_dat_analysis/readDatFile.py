#!/usr/bin/env python3

#
# Copyright 2010-2012,2014-2015 Ettus Research LLC
# Copyright 2021 Ettus Research, a National Instruments Company
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

# This utility allows for the viewing of dat files generated by the OARER architecture.
# Example Use: python3 readDatFile.py -folder0="/mnt/md1/" -folder1="/mnt/md0/" -n -numfolders=1 -base-rx="rx_00" -start-point=0 -end-point=16000 -pps=200 -fs="250000000" 
# Using the -n flag will return the (numfolders) newest folders from the directories pointed to by -folder0 and -folder1
# Without the flag: python3 readDatFile.py -folder0="/mnt/md0/CW_2.000000_GHz_03302022_082627_test" -folder1="/mnt/md1/CW_2.000000_GHz_03302022_082627_test"  -base-rx="rx_00" -start-point=0 -end-point=16000 -pps=200 -fs="250000000" 
# The above command will read directly from an output folder, folder0 and folder1. 
# See util.py for command line argument explanations or use python3 readDatFile.py -h

import sys
import logging as log
from plots import *
from util import *
from usrpDat import *
import datetime

def main():
    args = parse_args()
    if args.verbose:
        log.basicConfig(level=log.DEBUG)
    # Make Output Directory
    if (os.path.exists(os.getcwd()+"/" + "temp") == False):
        os.mkdir(os.getcwd()+"/" + "temp" )
    now = datetime.datetime.now()
    d1 = now.strftime("%m_%d_%Y_%H_%M_%S")
    temp_location = os.getcwd() + "/temp/" + d1 
    os.mkdir(temp_location)
   
    data_location = move_data(args, args.n,  args.numfolders, temp_location, d1)
    if args.ppw:
        ppw = args.ppw
    else:
        ppw = calculate_window(args.signal_freq, args.fs)
    data_folderdict = batch_folder_import(data_location, ppw, args.n, args.numfolders, start_point = args.start_point, fs=args.fs)
    batch_analyze_plot(data_folderdict, ppw, args.base_rx, temp_location, args.start_point, args.end_point)
   
            
if __name__ == "__main__":
    sys.exit(not main())